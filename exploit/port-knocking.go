package main

import (
    "fmt"
    "net"
    "os"
    "os/exec"
    "strconv"
    "time"
)

func main() {
    if len(os.Args) < 3 {
        fmt.Println("Usage: go run port-knocking.go <port1> <port2> ... <target> <port>")
        os.Exit(1)
    }

    target := os.Args[len(os.Args)-2]
    port, err := strconv.Atoi(os.Args[len(os.Args)-1])
    if err != nil {
        fmt.Println("Invalid port number:", os.Args[len(os.Args)-1])
        os.Exit(1)
    }

    for i := 1; i < len(os.Args)-2; i++ {
        port, err := strconv.Atoi(os.Args[i])
        if err != nil {
            fmt.Println("Invalid port number:", os.Args[i])
            os.Exit(1)
        }

        conn, err := net.DialTimeout("tcp", target+":"+strconv.Itoa(port), 500*time.Millisecond)
        if err == nil {
            conn.Close()
            continue
        }

        if err, ok := err.(net.Error); ok && err.Timeout() {
            continue
        }

        if err == nil {
            conn.Close()
            continue
        }

        if opErr, ok := err.(*net.OpError); ok && opErr.Op == "dial" && opErr.Net == "tcp" {
            _, err = net.Dial("tcp", target+":"+strconv.Itoa(port))
            if err != nil {
                fmt.Println("Error knocking on port", port, ":", err)
                os.Exit(1)
            }
        }
    }

    cmd := exec.Command("wget", "-qO-", target+":"+strconv.Itoa(port))
    output, err := cmd.Output()
    if err != nil {
        fmt.Println("Error retrieving content from", target+":"+strconv.Itoa(port), ":", err)
        os.Exit(1)
    }

    fmt.Println(string(output))
}